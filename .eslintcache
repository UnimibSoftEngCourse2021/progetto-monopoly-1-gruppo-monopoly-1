[{"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\index.js":"1","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\reportWebVitals.js":"2","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\Menu.js":"3","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\App.js":"4","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaLeft.js":"5","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaRight.js":"6","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\SceltaNumeroGiocatori.js":"7","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentMenuDx.js":"8","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentBoard.js":"9","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaTerreni.js":"10","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaGiocatori.js":"11","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Pedina.js":"12","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentController.js":"13","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\iniziaPartita.js":"14","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Banca.js":"15","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Acquista.js":"16","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Vendi.js":"17","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Costruisci.js":"18","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\CarteProbabilitaImprevisto\\Carte.js":"19","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaSociet√†Stazioni.js":"20","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\VendiEdificio.js":"21","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Ipoteca.js":"22"},{"size":546,"mtime":1610534909243,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1609835970640,"results":"25","hashOfConfig":"24"},{"size":1355,"mtime":1610354068331,"results":"26","hashOfConfig":"24"},{"size":11927,"mtime":1610621379355,"results":"27","hashOfConfig":"24"},{"size":271,"mtime":1609835970594,"results":"28","hashOfConfig":"24"},{"size":271,"mtime":1609835970594,"results":"29","hashOfConfig":"24"},{"size":2069,"mtime":1610090019373,"results":"30","hashOfConfig":"24"},{"size":1039,"mtime":1610531414132,"results":"31","hashOfConfig":"24"},{"size":5905,"mtime":1610610428145,"results":"32","hashOfConfig":"24"},{"size":6488,"mtime":1610621369473,"results":"33","hashOfConfig":"24"},{"size":2347,"mtime":1610526624748,"results":"34","hashOfConfig":"24"},{"size":384,"mtime":1610610839397,"results":"35","hashOfConfig":"24"},{"size":10147,"mtime":1610617062784,"results":"36","hashOfConfig":"24"},{"size":1118,"mtime":1610531206080,"results":"37","hashOfConfig":"24"},{"size":1042,"mtime":1610527020088,"results":"38","hashOfConfig":"24"},{"size":1673,"mtime":1610527020088,"results":"39","hashOfConfig":"24"},{"size":8937,"mtime":1610550746834,"results":"40","hashOfConfig":"24"},{"size":5962,"mtime":1610559420529,"results":"41","hashOfConfig":"24"},{"size":4191,"mtime":1610527020088,"results":"42","hashOfConfig":"24"},{"size":3206,"mtime":1610621364958,"results":"43","hashOfConfig":"24"},{"size":5020,"mtime":1610615656221,"results":"44","hashOfConfig":"24"},{"size":9256,"mtime":1610619914182,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"iogpuh",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\index.js",["98"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Menu from './Menu';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Menu />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["99","100"],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\reportWebVitals.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\Menu.js",["101"],"import React, { Component } from 'react'\r\nimport ComponentMenuDx from './components/ComponentMenuDx';\r\nimport MonopolyLogoMenu from '../src/img/monopoly_logo_menu.png';\r\nimport SceltaNumeroGiocatori from './components/SceltaNumeroGiocatori';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state={\r\n        numeroGiocatori: \"2\"\r\n      }\r\n    }\r\n\r\n    gestisciNumeroGiocatori = changeEvent => {\r\n      this.setState({\r\n          numeroGiocatori: changeEvent.target.value\r\n      })\r\n    }\r\n\r\n    render() {\r\n      \r\n      return (\r\n        <div className=\"Menu\">\r\n          <table className=\"tabellaMenu\">\r\n            <tr>\r\n              <td className=\"colonna1\" ><ComponentMenuDx numeroGiocatori={this.state.numeroGiocatori}/></td>\r\n                <td className=\"logoMonopoly\">\r\n                  <img className=\"logo\" src={MonopolyLogoMenu} class=\"Profile-image\" alt=\"Profile image\" width=\"500\"/>\r\n                </td>\r\n              <td className=\"colonna1\" >\r\n                <SceltaNumeroGiocatori numeroGiocatori={this.state.numeroGiocatori} gestisciNumeroGiocatori={this.gestisciNumeroGiocatori}/>\r\n                Il numero dei giocatori scelto √®: {this.state.numeroGiocatori}\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Menu;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\App.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaLeft.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaRight.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\SceltaNumeroGiocatori.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentMenuDx.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentBoard.js",["102","103","104","105"],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaTerreni.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaGiocatori.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Pedina.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentController.js",["106","107","108","109","110","111"],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\iniziaPartita.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Banca.js",["112","113"],"import React, { Component } from 'react';\r\nimport TabellaGiocatori from './Tabelle/TabellaGiocatori';\r\n\r\nclass Banca extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            saldoContoGiocatori: [0,0,0,0,0,0],\r\n            contrattiGiocatori: [0,0,0,0,0,0],\r\n        }\r\n    }\r\n\r\n\r\n    // Passa i parametri a TabellaGiocatori (attualmente non funziona)\r\n    creaTabellaGiocatori = () => {\r\n        for(let i=1; i<=6; i++){\r\n            //this.state.createData(i, this.state.saldoContoGiocatori[i-1]);\r\n            <TabellaGiocatori props={i, this.state.saldoContoGiocatori[i-1]} />\r\n        }\r\n    }\r\n\r\n    //Modifica il saldo al giocatore (giocatore identificato tramite un numero int)\r\n    modificaSaldo = (sommaDiDenaro, giocatore) => {\r\n        if(this.state.saldoContoPedine[giocatore] + sommaDiDenaro >= 0){\r\n            this.state.saldoContoPedine[giocatore] += sommaDiDenaro;\r\n        }else{\r\n            console.log(\"Errore\");\r\n        }\r\n    }\r\n}\r\nexport default Banca;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Acquista.js",["114","115","116"],"import React from 'react';\r\nimport {Paper, Modal, Button, Radio, RadioGroup, FormControlLabel} from '@material-ui/core';\r\n\r\n\r\nfunction Acquista(props){\r\n\r\nconst [openModal, setOpenModal] = React.useState(false);\r\nconst handleOpen = () => { setOpenModal(true) };\r\nconst handleClose = () => { setOpenModal(false) };\r\n\r\nconst body = (\r\n    <Paper style={{marginTop:'16px', marginLeft:'200px', marginRight:'200px'}}>\r\n        \r\n      <h3 style={{margin:'16px'}}>Attualmente sei sulla casella {props.attualeCasella}</h3>\r\n\r\n      <h4 style={{margin:'16px'}}>SI lo puoi acquistare</h4>  \r\n      <h4 style={{margin:'16px'}}>non lo puoi acquistare, gi√† acquisito</h4>  \r\n      \r\n      \r\n      <Button variant=\"contained\" style={{margin:'16px'}}  >\r\n        Acquista\r\n      </Button>\r\n      \r\n      \r\n    </Paper>\r\n  );\r\n\r\n    return(\r\n        <div>\r\n          <Button onClick={handleOpen} variant=\"outlined\" size=\"small\" style={{marginLeft:'5px'}}>\r\n          Acquista\r\n          </Button>\r\n          <Modal open={openModal} onClose={handleClose}>\r\n            {body}\r\n          </Modal>\r\n        </div>\r\n        );\r\n        }\r\n\r\nexport default Acquista;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Vendi.js",["117","118"],"import React from 'react';\r\nimport {Paper, Modal, Button, Grid, TextField, Radio, RadioGroup, FormControlLabel} from '@material-ui/core';\r\n\r\n\r\nfunction Vendi(props){\r\n\r\n    \r\n  \r\n    \r\n\r\n//Stato del Modale utilizato per costruire un edificio\r\nconst [openModal, setOpenModal] = React.useState(false);\r\nconst handleOpen = () => { setOpenModal(true) };\r\nconst handleClose = () => { setOpenModal(false) };\r\n\r\n\r\n//Stato del terreno da vendere\r\nconst [terreno, setTerreno] = React.useState('');\r\nconst handleChangeTerreno = (event) => {\r\n  setTerreno(event.target.value);\r\n};\r\n\r\n//Stato del gicatore che vuole vendere\r\nconst [venditore, setVenditore] = React.useState('');\r\nconst handleChangeVenditore = (event) => {\r\n  setVenditore(event.target.value);\r\n};\r\n\r\n//Stato del gicatore che vuole comprare, eventualmente la banca\r\nconst [aquirente, setAquirente] = React.useState('');\r\nconst handleChangeAquirente = (event) => {\r\n  setAquirente(event.target.value);\r\n};\r\n\r\n//Stato del prezzo a cui viene venduta la propriet√†\r\nconst [prezzo, setPrezzo] = React.useState('');\r\nconst handleChangePrezzo = (event) => {\r\n  setPrezzo(event.target.value);\r\n};\r\n\r\n\r\n\r\nfunction EsisteTerreno(){\r\n  var i = 0;\r\n  var esiste = false;\r\n  var n;\r\n  while(i < props.terreni.length){\r\n    if(terreno === props.terreni[i].nome){\r\n      esiste = true;\r\n      n = i;\r\n      i = 100;\r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  if(esiste){\r\n    return(n);\r\n  }\r\n  else{\r\n    return(-1);\r\n  }\r\n}\r\n\r\nfunction EsisteSociet√†Stazione(){\r\n  var i = 0;\r\n  var esiste = false;\r\n  var n;\r\n  while(i < props.societ√†Stazioni.length){\r\n    if(terreno === props.societ√†Stazioni[i].nome){\r\n      esiste = true;\r\n      n = i;\r\n      i = 100;\r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  if(esiste){\r\n    return(n);\r\n  }\r\n  else{\r\n    return(-1);\r\n  }\r\n}\r\n\r\nfunction EsisteGiocatore(nome){\r\n  \r\n  var i = 0;\r\n  while(i < props.giocatori.length){\r\n    if(nome === props.giocatori[i].nome){\r\n     return(i); \r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  return(-1);\r\n\r\n}\r\n\r\nfunction VendiTerreno(){\r\n\r\n  //verifico che il terreno esista e salvo il risultato in propriet√†\r\n  var n = EsisteTerreno();\r\n  \r\n  if(n === -1){\r\n    alert('Controlla che il nome del terreno sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var propriet√† = props.terreni[n];\r\n  \r\n  if(!(propriet√†.proprietario == venditore)){\r\n    alert('Non puoi vendere qualcosa che non ti appartiene');\r\n    return;\r\n  }\r\n  //verifico che il venditore esista e che non sia la banca\r\n  var y = EsisteGiocatore(venditore);\r\n  if(y === -1){\r\n    alert('Controlla che il nome del venditore sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var venditore2 = props.giocatori[y];\r\n  \r\n \r\n  \r\n  //verifico che l'aquirente esista, pu√≤ essere anche la banca\r\n  var x = EsisteGiocatore(aquirente);\r\n  var aquirente2;\r\n  if(x === -1){\r\n    alert(\"Controlla che il nome dell'aquirente sia scritto in modo corretto\");\r\n    return;\r\n  }\r\n  if(aquirente === 'Banca'){\r\n    aquirente2 = aquirente;\r\n  }\r\n  else{\r\n    aquirente2 = props.giocatori[x];\r\n  }\r\n  //verifico che sul terreno non ci siano ne case ne alberghi\r\n  if(propriet√†.case > 0 || propriet√†.alberghi > 0){\r\n    alert('Non puoi vendere un terreno con case o alberghi');\r\n    return;\r\n  }\r\n  //Verifico che venditore e aquirente non siano lo stesso giocatore\r\n  if(venditore2 === aquirente2){\r\n    alert('Non puoi vendere a te stesso');\r\n    return;\r\n  }\r\n  \r\n  //verifico che il prezzo sia > 0\r\n  if(prezzo <= 0){\r\n    alert('Controlla di aver inserito un prezzo maggiore di zero');\r\n    return;\r\n  }\r\n  //sposto i soldi dall'aquirente2 al venditore2\r\n  if(prezzo > 0){\r\n    aquirente2.capitale = aquirente2.capitale - parseInt(prezzo);\r\n    venditore2.capitale = venditore2.capitale + parseInt(prezzo);\r\n  }\r\n  //aquirente diventa il nuovo proprietario della propriet√†\r\n  propriet√†.proprietario = aquirente2.nome;\r\n  \r\n  //aggiorno le variabili di stato che contengono l'elenco dei terreni e dei giocatori\r\n  var nuoviTerreni = props.terreni;\r\n  nuoviTerreni[n] = propriet√†;  \r\n  props.setTerreni(nuoviTerreni);  \r\n  \r\n  var nuoviGiocatori = props.giocatori;\r\n  nuoviGiocatori[x] = aquirente2;\r\n  nuoviGiocatori[y] = venditore2;\r\n  props.setGiocatori(nuoviGiocatori);\r\n\r\n  console.log(props.giocatori);\r\n  console.log(props.terreni);\r\n\r\n  alert('La vendita √® andata a buon fine');\r\n}\r\n\r\nfunction VendiStazioneSociet√†(){\r\n\r\n  //verifico che la societ√† / stazione esista e salvo il risultato in propriet√†\r\n  var n = EsisteSociet√†Stazione();\r\n  \r\n  if(n === -1){\r\n    alert('Controlla che il nome della societ√† o della stazione sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var propriet√† = props.societ√†Stazioni[n];\r\n  \r\n  if(!(propriet√†.proprietario == venditore)){\r\n    alert('Non puoi vendere qualcosa che non ti appartiene');\r\n    return;\r\n  }\r\n  //verifico che il venditore esista \r\n  var y = EsisteGiocatore(venditore);\r\n  if(y === -1){\r\n    alert('Controlla che il nome del venditore sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var venditore2 = props.giocatori[y];\r\n  \r\n \r\n  \r\n  //verifico che l'aquirente esista\r\n  var x = EsisteGiocatore(aquirente);\r\n  var aquirente2;\r\n  if(x === -1){\r\n    alert(\"Controlla che il nome dell'aquirente sia scritto in modo corretto\");\r\n    return;\r\n  }\r\n  aquirente2 = props.giocatori[x];\r\n  \r\n  \r\n  //Verifico che venditore e aquirente non siano lo stesso giocatore\r\n  if(venditore2 === aquirente2){\r\n    alert('Non puoi vendere a te stesso');\r\n    return;\r\n  }\r\n  \r\n  //verifico che il prezzo sia > 0\r\n  if(prezzo <= 0){\r\n    alert('Controlla di aver inserito un prezzo maggiore di zero');\r\n    return;\r\n  }\r\n  //sposto i soldi dall'aquirente2 al venditore2\r\n  if(prezzo > 0){\r\n    aquirente2.capitale = aquirente2.capitale - parseInt(prezzo);\r\n    venditore2.capitale = venditore2.capitale + parseInt(prezzo);\r\n  }\r\n  //aquirente diventa il nuovo proprietario della propriet√†\r\n  propriet√†.proprietario = aquirente2.nome;\r\n  \r\n  //aggiorno le variabili di stato che contengono l'elenco delle societ√†, delle stazioni e dei giocatori\r\n  var nuoveSociet√†Stazioni = props.societ√†Stazioni;\r\n  nuoveSociet√†Stazioni[n] = propriet√†;  \r\n  props.setSociet√†Stazioni(nuoveSociet√†Stazioni);  \r\n  \r\n  var nuoviGiocatori = props.giocatori;\r\n  nuoviGiocatori[x] = aquirente2;\r\n  nuoviGiocatori[y] = venditore2;\r\n  props.setGiocatori(nuoviGiocatori);\r\n\r\n  console.log(props.giocatori);\r\n  console.log(props.societ√†Stazioni);\r\n\r\n  alert('La vendita √® andata a buon fine');\r\n}\r\n\r\n\r\n\r\n//Stato del RadioGrup per la gerstione del tipo di vendita\r\n//si pu√≤ scegliere se vendere terreni o stazioni/societ√†\r\nconst [tipoVendita, setTipoVendita] = React.useState('Terreno');\r\nconst handleChangeTipoVendita = (event) => { setTipoVendita(event.target.value) };\r\n\r\nfunction Vendita(){\r\n  \r\n  if(tipoVendita === 'Terreno'){\r\n    VendiTerreno();\r\n  }\r\n  else{\r\n    VendiStazioneSociet√†();\r\n  }\r\n}\r\n\r\nconst body = (\r\n  <Paper style={{marginTop:'16px', marginLeft:'200px', marginRight:'200px'}}>\r\n      \r\n    <h2 style={{margin:'16px'}}>Cosa vuoi vendere</h2>\r\n    <RadioGroup value={tipoVendita} onChange={handleChangeTipoVendita} style={{margin:'16px'}}>\r\n        <FormControlLabel value=\"Terreno\" control={<Radio />} label=\"Terreno\" />\r\n        <FormControlLabel value=\"StazioneSociet√†\" control={<Radio />} label=\"Stazione o Societ√†\" />\r\n    </RadioGroup>\r\n    \r\n    <Grid container direction=\"column\">\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Inserisci il nome della casella che vuoi vendere</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'32px', width:'350px'}} onChange={handleChangeTerreno}/>\r\n      </Grid>\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Nome del venditore</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'265px', width:'350px'}} onChange={handleChangeVenditore}/>\r\n      </Grid>\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Nome dell'aquirente</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'259px', width:'350px'}} onChange={handleChangeAquirente}/>\r\n      </Grid>\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Quanto dovr√† pagare?</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'246px', width:'350px'}} onChange={handleChangePrezzo}/>\r\n      </Grid>\r\n      <Button variant=\"contained\" style={{margin:'16px', width:'100px'}} onClick={() => Vendita()} >\r\n        Vendi\r\n      </Button>\r\n    </Grid>\r\n\r\n    \r\n       \r\n  </Paper>\r\n);\r\n\r\n\r\n\r\nreturn(\r\n<div>\r\n  <Button onClick={handleOpen} variant=\"outlined\" size=\"small\" >\r\n    Vendi\r\n  </Button>\r\n  <Modal open={openModal} onClose={handleClose}>\r\n    {body}\r\n  </Modal>\r\n</div>\r\n);\r\n}\r\nexport default Vendi;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Costruisci.js",["119","120"],"import React from 'react';\r\nimport {Paper, Modal, Button, Radio, RadioGroup, FormControlLabel, TextField, Grid} from '@material-ui/core';\r\n\r\n\r\nfunction Costruisci(props){\r\n\r\n    \r\n\r\n    \r\n\r\n//Stato del Modale utilizato per costruire un edificio\r\nconst [openModal, setOpenModal] = React.useState(false);\r\nconst handleOpen = () => { setOpenModal(true) };\r\nconst handleClose = () => { setOpenModal(false) };\r\n\r\n//Stato del RadioGrup casaAlbergo usato per scegliere la tipologia di edificio da costruire\r\nconst [edificio, setEdificio] = React.useState('casa');\r\nconst handleChangeTipoDiEdificio = (event) => { setEdificio(event.target.value) };\r\n\r\n//Stato del RadioGrup terreno usato per scegliere il terreno su cui costruire l'edificio\r\nconst [terreno, setTerreno] = React.useState(1);\r\nconst handleChangeTerreno = (event) => {\r\n  setTerreno(event.target.value);\r\n};\r\n\r\nfunction EsisteTerreno(){\r\n  var i = 0;\r\n  var esiste = false;\r\n  var n;\r\n  while(i < props.terreni.length){\r\n    if(terreno === props.terreni[i].nome){\r\n      esiste = true;\r\n      n = i;\r\n      i = 100;\r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  if(esiste){\r\n    return(n);\r\n  }\r\n  else{\r\n    return(-1);\r\n  }\r\n}\r\n\r\nfunction VerificaColore(colore, giocatore){\r\n  var i = 0;\r\n  while(i < props.terreni.length){\r\n    if((props.terreni[i].colore === colore) && !(props.terreni[i].proprietario === giocatore)){\r\n      return(false);\r\n    }\r\n    i++\r\n  }\r\n  \r\n  return(true);\r\n}\r\n\r\n\r\nfunction CostruisciCasa(){\r\n  //verifico che il terreno esista e salvo il risultato in propriet√†\r\n  var n = EsisteTerreno();\r\n  if(n === -1){\r\n    alert('Controlla che il nome del terreno sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var propriet√† = props.terreni[n];\r\n  //verifico che il turnoGiocatore sia proprietario di propriet√†\r\n  if(!(propriet√†.proprietario == props.turnoGiocatore)){\r\n    alert('Non puoi costruire su un terreno che non √® tuo');\r\n    return;\r\n  }\r\n  //Per poter costruire su propriet√† devi avere tutti i terreni dello stesso colore\r\n  var verifica = VerificaColore(propriet√†.colore, propriet√†.proprietario);\r\n  if(!verifica){\r\n    alert('Per costruire devi prima possedere tutte le caselle dello stesso colore');\r\n    return;\r\n  }\r\n  //Su un terreno si possono costruire massimo 4 case\r\n  if(propriet√†.case >= 4){\r\n    alert('Su un terreno si possono costruire massimo quattro case');\r\n    return;\r\n  }\r\n  //Se sul terreno c'√® un albergo non posso costruirvi delle case\r\n  if(propriet√†.alberghi > 0){\r\n    alert(\"Se su un terreno c'e' un albergo non puoi costruirvi una casa\");\r\n    return;\r\n  }\r\n  //modifico l'array terreni e l'array giocatori\r\n  propriet√†.case = propriet√†.case + 1;\r\n  console.log(propriet√†);\r\n  var nuoviTerreni = props.terreni;\r\n  nuoviTerreni[n] = propriet√†;\r\n  props.setTerreni(nuoviTerreni);\r\n  console.log(props.terreni);\r\n\r\n  var nuoviGiocatori = props.giocatori;\r\n  var costoCostruzione = propriet√†.valore*3/4;\r\n  nuoviGiocatori[props.turnoGiocatore].capitale = nuoviGiocatori[props.turnoGiocatore].capitale - costoCostruzione;\r\n  props.setGiocatori(nuoviGiocatori);\r\n  console.log(props.giocatori);\r\n\r\n  alert('La costruzione della casa √® andata a buon fine');\r\n\r\n}\r\n\r\nfunction CostruisciAlbergo(){\r\n  //verifico che il terreno esista e salvo il risultato in propriet√†\r\n  var n = EsisteTerreno();\r\n  if(n === -1){\r\n    alert('Controlla che il nome del terreno sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var propriet√† = props.terreni[n];\r\n  //verifico che il turnoGiocatore sia proprietario di propriet√†\r\n  if(!(propriet√†.proprietario == props.turnoGiocatore)){\r\n    alert('Non puoi costruire su un terreno che non √® tuo');\r\n    return;\r\n  }\r\n  //Su un terreno si pu√≤ costruire massimo un albergo\r\n  if(propriet√†.alberghi > 0){\r\n    alert('Su un terreno si pu√≤ costruire massimo un albergo');\r\n    return;\r\n  }\r\n  \r\n  //Per poter costruire un albergo devi avere quattro case su propriet√† \r\n  if(propriet√†.case < 4){\r\n    alert('Per costruire un albergo su questo terreno devi prima possedere quattro case');\r\n    return;\r\n  }\r\n  \r\n  //modifico l'array terreni e l'array giocatori\r\n  propriet√†.alberghi = propriet√†.alberghi + 1;\r\n  propriet√†.case = 0;\r\n  console.log(propriet√†);\r\n  var nuoviTerreni = props.terreni;\r\n  nuoviTerreni[n] = propriet√†;\r\n  props.setTerreni(nuoviTerreni);\r\n  console.log(props.terreni);\r\n\r\n  var nuoviGiocatori = props.giocatori;\r\n  var costoCostruzione = propriet√†.valore*3/4;\r\n  nuoviGiocatori[props.turnoGiocatore].capitale = nuoviGiocatori[props.turnoGiocatore].capitale - costoCostruzione;\r\n  props.setGiocatori(nuoviGiocatori);\r\n  console.log(props.giocatori);\r\n\r\n  alert(\"La costruzione dell'albergo √® andata a buon fine\");\r\n\r\n}\r\n\r\nfunction CostruisciEdificio(){\r\n  if(edificio === 'casa'){\r\n    CostruisciCasa();\r\n  }\r\n  else{\r\n    CostruisciAlbergo();\r\n  }\r\n  \r\n}\r\n\r\nconst body = (\r\n  <Paper style={{marginTop:'16px', marginLeft:'200px', marginRight:'200px'}}>\r\n      \r\n    <h2 style={{margin:'16px'}}>Cosa vuoi costruire?</h2>\r\n    <RadioGroup value={edificio} onChange={handleChangeTipoDiEdificio} style={{margin:'16px'}}>\r\n        <FormControlLabel value=\"casa\" control={<Radio />} label=\"Casa\" />\r\n        <FormControlLabel value=\"albergo\" control={<Radio />} label=\"Albergo\" />\r\n    </RadioGroup>\r\n\r\n    <h2 style={{margin:'16px'}}>Dove vuoi costruire?</h2>\r\n    <Grid container direction=\"column\">\r\n      <TextField variant=\"outlined\" style={{margin:'16px', width:'350px'}} onChange={handleChangeTerreno}/>\r\n    \r\n      <Button variant=\"contained\" style={{margin:'16px', width:'350px'}} onClick={() => CostruisciEdificio()}>\r\n        Costruisci questo edificio\r\n      </Button>\r\n   \r\n    </Grid>\r\n    \r\n    \r\n    \r\n  </Paper>\r\n);\r\n\r\n\r\n\r\n\r\n\r\nreturn(\r\n<div>\r\n  <Button onClick={handleOpen} variant=\"outlined\" size=\"small\" >\r\n    Costruisci\r\n  </Button>\r\n  <Modal open={openModal} onClose={handleClose}>\r\n    {body}\r\n  </Modal>\r\n</div>\r\n);\r\n}\r\nexport default Costruisci;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\CarteProbabilitaImprevisto\\Carte.js",["121","122"],"import React, { Component } from 'react';\r\nimport { modificaSaldo } from '../Banca';\r\n\r\nclass Carte extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //carta = [Numero carta, Descrizione, Somma di denaro, Somma per ogni casa, Somma per ogni albergo, Somma per ogni giocatore]\r\n            carte: [\r\n                //Probabilit√†\r\n                [0, 'Serata della Grande Opera: incassa $50 da ogni giocaotore', 0, 0, 0, 50],\r\n                [1, 'Errore della banca: incassa $200', 200, 0, 0, 0],\r\n                [2, 'Parcella del medico: paga $50', -50, 0, 0, 0],\r\n                [3, 'Rimborso della imposta sul reddito: incassa $20', 20, 0, 0, 0],\r\n                [4, 'Rendimento assicurazione sulla vita: incassa $100', 100, 0, 0, 0],\r\n                [5, 'Paga le spese mediche ospedaliere: paga $50', -50, 0, 0, 0],\r\n                [6, 'Paga le tasse scolastiche: paga $50', -50, 0, 0, 0],\r\n                [7, 'Commisione consulenza: incassa $25', 25, 0, 0, 0],\r\n                [8, 'Hai vinto il secondo posto in una gara di bellezza: incassa $10', 10, 0, 0, 0],\r\n                [9, 'Eredit√†: incassa $100', 100, 0, 0, 0],\r\n                [10, 'Vendita di azioni: incassa $100', 100, 0, 0, 0],\r\n                [11, 'Rendimento fondo vacanze: incassa $100', 100, 0, 0, 0],\r\n                [12, 'Sei stato tassato per le riparazioni in questa strada: paga $45 per casa e $115 per hotel', 0, -45, -115, 0],\r\n                [13, 'Esci di Prigione', 0, 0, 0, 0],\r\n                [14, 'Vai in Prigione senza passare dal Via', 0, 0, 0, 0],\r\n                [15, 'Vai al Via', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n\r\n                //Imprevisti\r\n                [16, 'Esci di Prigione', 0, 0, 0, 0],\r\n                [17, 'Vai al Via', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n                [18, 'Vai a Illinois Avenue', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$ IN CASO SI PASSI DAL VIA, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n                [19, 'Vai a St. Charles Place', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$ IN CASO SI PASSI DAL VIA, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n                [20, 'La Banca paga un dividendo: incassi $50', 50, 0, 0, 0],\r\n                [21, 'Vai indietro di 3 caselle', 0, 0, 0, 0],\r\n                [22, 'Vai in Prigione senza passare dal Via', 0, 0, 0, 0],\r\n                [23, 'Riparazioni generali a tutte le tue propriet√†: paga $25 per casa e $100 per hotel', 0, -25, -100, 0],\r\n                [24, 'Paga tasse scadute: paga $10', -10, 0, 0, 0],\r\n                [25, 'Vai a Reading Railroad', 0, 0, 0, 0],\r\n                [26, 'Vai a Boardwalk', 0, 0, 0, 0],\r\n                [27, 'Sei eletto chairman della tavola da gioco: paga $50 da ogni giocaotore', 0, 0, 0, -50],\r\n                [28, 'Rendimento prestito immobiliare: incassa $150', 150, 0, 0, 0],\r\n                [29, 'Muovi la pedina al prossimo Utility, se non ha proprietario puoi comprarlo, se lo ha tira i dadi e paga 10 volte il risultato del lancio', 0, 0, 0, 0],\r\n                [30, 'Muovi la pedina alla prossimo Stazione, se non ha proprietario puoi comprarla, se lo ha paga il doppio del noleggio', 0, 0, 0, 0],\r\n                [31, 'Hai vinto una competizione di cruciverba: incassa $100', 100, 0, 0, 0],\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    estraiCarta = (probabilitaOImprevisto, giocatore) => { //probabilit√†==true imprevisto==false\r\n        let idCarta;\r\n        if (probabilitaOImprevisto){\r\n            idCarta = Math.floor(Math.random()*(15));\r\n        }else{\r\n            idCarta = Math.floor(Math.random()*(31-16)+16);\r\n        };\r\n        this.attivaCarta(idCarta, giocatore);\r\n    }\r\n\r\n    \r\n    attivaCarta = (idCarta, giocatore) => {\r\n        //  TODO\r\n        alert('Giocatore: ' + giocatore + ' \\n La carta √®: ' + this.state.carte[idCarta][1]);\r\n        //if (this.state.carte[idCarta][2] != 0){\r\n        //     this.props.modificaSaldo(this.state.carte[idCarta][2], giocatore);\r\n        //}\r\n    }\r\n}\r\nexport default Carte;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaSociet√†Stazioni.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\VendiEdificio.js",["123","124"],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Ipoteca.js",["125","126","127","128"],{"ruleId":"129","severity":1,"message":"130","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":28,"column":19,"nodeType":"139","endLine":28,"endColumn":119},{"ruleId":"129","severity":1,"message":"140","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"141","line":93,"column":53,"nodeType":"131","messageId":"132","endLine":93,"endColumn":65},{"ruleId":"142","severity":1,"message":"143","line":102,"column":13,"nodeType":"144","messageId":"145","endLine":119,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":140,"column":21,"nodeType":"148","endLine":140,"endColumn":51},{"ruleId":"129","severity":1,"message":"149","line":85,"column":14,"nodeType":"131","messageId":"132","endLine":85,"endColumn":15},{"ruleId":"129","severity":1,"message":"150","line":85,"column":17,"nodeType":"131","messageId":"132","endLine":85,"endColumn":30},{"ruleId":"129","severity":1,"message":"151","line":85,"column":32,"nodeType":"131","messageId":"132","endLine":85,"endColumn":45},{"ruleId":"129","severity":1,"message":"141","line":85,"column":47,"nodeType":"131","messageId":"132","endLine":85,"endColumn":59},{"ruleId":"129","severity":1,"message":"152","line":85,"column":61,"nodeType":"131","messageId":"132","endLine":85,"endColumn":67},{"ruleId":"153","severity":1,"message":"154","line":114,"column":89,"nodeType":"155","messageId":"156","endLine":114,"endColumn":90},{"ruleId":"157","severity":1,"message":"158","line":18,"column":39,"nodeType":"159","messageId":"160","endLine":18,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":25,"column":13,"nodeType":"163","endLine":25,"endColumn":40},{"ruleId":"129","severity":1,"message":"164","line":2,"column":31,"nodeType":"131","messageId":"132","endLine":2,"endColumn":36},{"ruleId":"129","severity":1,"message":"165","line":2,"column":38,"nodeType":"131","messageId":"132","endLine":2,"endColumn":48},{"ruleId":"129","severity":1,"message":"166","line":2,"column":50,"nodeType":"131","messageId":"132","endLine":2,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":113,"column":31,"nodeType":"155","messageId":"169","endLine":113,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":191,"column":31,"nodeType":"155","messageId":"169","endLine":191,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":70,"column":31,"nodeType":"155","messageId":"169","endLine":70,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":117,"column":31,"nodeType":"155","messageId":"169","endLine":117,"endColumn":33},{"ruleId":"129","severity":1,"message":"170","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"171","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":60,"column":31,"nodeType":"155","messageId":"169","endLine":60,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":97,"column":31,"nodeType":"155","messageId":"169","endLine":97,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":100,"column":31,"nodeType":"155","messageId":"169","endLine":100,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":134,"column":31,"nodeType":"155","messageId":"169","endLine":134,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":189,"column":33,"nodeType":"155","messageId":"169","endLine":189,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":223,"column":33,"nodeType":"155","messageId":"169","endLine":223,"endColumn":35},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don‚Äôt need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Component' is defined but never used.","'visSegnalino' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'a' is assigned a value but never used.","'xposSegnalino' is assigned a value but never used.","'tposSegnalino' is assigned a value but never used.","'strato' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'React' is defined but never used.","'modificaSaldo' is defined but never used.","no-global-assign","no-unsafe-negation"]