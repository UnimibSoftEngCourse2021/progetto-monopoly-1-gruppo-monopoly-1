[{"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\index.js":"1","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\reportWebVitals.js":"2","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\Menu.js":"3","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\App.js":"4","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaLeft.js":"5","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaRight.js":"6","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\SceltaNumeroGiocatori.js":"7","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentMenuDx.js":"8","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentBoard.js":"9","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaTerreni.js":"10","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaGiocatori.js":"11","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Pedina.js":"12","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentController.js":"13","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\iniziaPartita.js":"14","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Banca.js":"15","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Acquista.js":"16","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Vendi.js":"17","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Costruisci.js":"18","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\CarteProbabilitaImprevisto\\Carte.js":"19","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaSocietàStazioni.js":"20"},{"size":546,"mtime":1610534909243,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1609835970640,"results":"23","hashOfConfig":"22"},{"size":1355,"mtime":1610354068331,"results":"24","hashOfConfig":"22"},{"size":11760,"mtime":1610561190146,"results":"25","hashOfConfig":"22"},{"size":271,"mtime":1609835970594,"results":"26","hashOfConfig":"22"},{"size":271,"mtime":1609835970594,"results":"27","hashOfConfig":"22"},{"size":2069,"mtime":1610090019373,"results":"28","hashOfConfig":"22"},{"size":1039,"mtime":1610531414132,"results":"29","hashOfConfig":"22"},{"size":5974,"mtime":1610538076839,"results":"30","hashOfConfig":"22"},{"size":6278,"mtime":1610559890796,"results":"31","hashOfConfig":"22"},{"size":2347,"mtime":1610526624748,"results":"32","hashOfConfig":"22"},{"size":384,"mtime":1609835970594,"results":"33","hashOfConfig":"22"},{"size":8422,"mtime":1610554022574,"results":"34","hashOfConfig":"22"},{"size":1118,"mtime":1610531206080,"results":"35","hashOfConfig":"22"},{"size":1042,"mtime":1610527020088,"results":"36","hashOfConfig":"22"},{"size":1673,"mtime":1610527020088,"results":"37","hashOfConfig":"22"},{"size":8937,"mtime":1610550746834,"results":"38","hashOfConfig":"22"},{"size":5962,"mtime":1610559420529,"results":"39","hashOfConfig":"22"},{"size":4191,"mtime":1610527020088,"results":"40","hashOfConfig":"22"},{"size":2646,"mtime":1610561074054,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"iogpuh",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\index.js",["91"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Menu from './Menu';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Menu />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["92","93"],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\reportWebVitals.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\Menu.js",["94"],"import React, { Component } from 'react'\r\nimport ComponentMenuDx from './components/ComponentMenuDx';\r\nimport MonopolyLogoMenu from '../src/img/monopoly_logo_menu.png';\r\nimport SceltaNumeroGiocatori from './components/SceltaNumeroGiocatori';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state={\r\n        numeroGiocatori: \"2\"\r\n      }\r\n    }\r\n\r\n    gestisciNumeroGiocatori = changeEvent => {\r\n      this.setState({\r\n          numeroGiocatori: changeEvent.target.value\r\n      })\r\n    }\r\n\r\n    render() {\r\n      \r\n      return (\r\n        <div className=\"Menu\">\r\n          <table className=\"tabellaMenu\">\r\n            <tr>\r\n              <td className=\"colonna1\" ><ComponentMenuDx numeroGiocatori={this.state.numeroGiocatori}/></td>\r\n                <td className=\"logoMonopoly\">\r\n                  <img className=\"logo\" src={MonopolyLogoMenu} class=\"Profile-image\" alt=\"Profile image\" width=\"500\"/>\r\n                </td>\r\n              <td className=\"colonna1\" >\r\n                <SceltaNumeroGiocatori numeroGiocatori={this.state.numeroGiocatori} gestisciNumeroGiocatori={this.gestisciNumeroGiocatori}/>\r\n                Il numero dei giocatori scelto è: {this.state.numeroGiocatori}\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Menu;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\App.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaLeft.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentProprietaRight.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\SceltaNumeroGiocatori.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentMenuDx.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentBoard.js",["95","96","97","98","99","100"],"import React, { Component } from 'react';\r\nimport Pedina from './Pedina';\r\nimport ComponentController from './ComponentController';\r\n\r\nimport hat from '../img/hat.png';\r\nimport iron from '../img/iron.png';\r\nimport car from '../img/car.png';\r\nimport boat from '../img/boat.png';\r\nimport doggo from '../img/doggo.png';\r\nimport shoe from '../img/shoe.png';\r\nimport thimble from '../img/thimble.png';\r\nimport wheelbarrow from '../img/wheelbarrow.png';\r\n\r\n// Struttura dati che mappa la tavola da gioco.\r\n// Partendo da GO come elemento 0 e proseguendo nel verso di gioco\r\n// Tracciato record: indice, ascissa, ordinata, nome casella\r\nconst tavolaGioco = [\r\n    [0, 940, 600, \"GO\"],\r\n    [1, 870, 600, \"GO\"],\r\n    [2, 820, 600, \"GO\"],\r\n    [3, 770, 600, \"GO\"],\r\n    [4, 720, 600, \"GO\"],\r\n    [5, 660, 600, \"GO\"],\r\n    [6, 610, 600, \"GO\"],\r\n    [7, 560, 600, \"GO\"],\r\n    [8, 500, 600, \"GO\"],\r\n    [9, 450, 600, \"GO\"],\r\n    [10, 370, 600, \"JAIL\"],\r\n    [11, 370, 530, \"GO\"],\r\n    [12, 370, 480, \"GO\"],\r\n    [13, 370, 420, \"GO\"],\r\n    [14, 370, 360, \"GO\"],\r\n    [15, 370, 310, \"GO\"],\r\n    [16, 370, 250, \"GO\"],\r\n    [17, 370, 200, \"GO\"],\r\n    [18, 370, 150, \"GO\"],\r\n    [19, 370, 100, \"GO\"],\r\n    [20, 370, 20, \"FREE PARKING\"],\r\n    [21, 450, 20, \"GO\"],\r\n    [22, 500, 20, \"GO\"],\r\n    [23, 560, 20, \"GO\"],\r\n    [24, 610, 20, \"GO\"],\r\n    [25, 660, 20, \"GO\"],\r\n    [26, 720, 20, \"GO\"],\r\n    [27, 770, 20, \"GO\"],\r\n    [28, 820, 20, \"GO\"],\r\n    [29, 880, 20, \"GO\"],\r\n    [30, 940, 20, \"GO TO JAIL\"],\r\n    [31, 940, 100, \"GO\"],\r\n    [32, 940, 150, \"GO\"],\r\n    [33, 940, 200, \"GO\"],\r\n    [34, 940, 250, \"GO\"],\r\n    [35, 940, 310, \"GO\"],\r\n    [36, 940, 360, \"GO\"],\r\n    [37, 940, 420, \"GO\"],\r\n    [38, 940, 480, \"GO\"],\r\n    [39, 940, 530, \"GO\"]\r\n];\r\n\r\nclass ComponentBoard extends React.Component {\r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          // Tracciato record: nome, ascissa, ordinata, visibilita, strato, attualeCasella  \r\n          segnalini: [\r\n                        [\"hat\", 940, 600, \"visible\",0,0],\r\n                        [\"iron\", 940, 600, \"visible\",1,0],\r\n                        [\"car\", 940, 600, \"visible\",2,0],\r\n                        [\"boat\", 940, 600, \"visible\",3,0],\r\n                        [\"doggo\", 940, 600, \"visible\",4,0],\r\n                        [\"shoe\", 940, 600, \"visible\",5,0],\r\n                        [\"thimble\", 940, 600, \"hidden\",6,0],\r\n                        [\"wheelbarrow\", 940, 600, \"hidden\",7,0],\r\n                    ],\r\n         // turnoGiocatore: 0,\r\n         // numeroGiocatori: 4\r\n        };\r\n      }\r\n\r\n      \r\n      muoviPedine = changeEvent => {\r\n        this.setState({\r\n            \r\n        })\r\n      }\r\n  \r\n\r\n    render () {\r\n\r\n        for (let i = 0; i < this.state.segnalini.length; i++) {\r\n            let visSegn;\r\n            const [a, xposSegnalino, tposSegnalino, visSegnalino, strato] = this.state.segnalini[i];\r\n            /// if visibiità segnalini\r\n            if (i<=this.props.numeroGiocatori-1) {visSegn='visible'} else {visSegn='hidden'}\r\n\r\n            const segnalinoSet = {  left: xposSegnalino+\"px\",\r\n                                    top: tposSegnalino+\"px\",\r\n                                    visibility: visSegn,\r\n                                    zIndex: strato\r\n                                 }\r\n            switch (a) {\r\n                case \"car\": var mystyleCar = segnalinoSet;\r\n                    break;\r\n                case \"boat\": var mystyleBoat = segnalinoSet;\r\n                    break;\r\n                case \"hat\": var mystyleHat = segnalinoSet;\r\n                    break;\r\n                case \"iron\": var mystyleIron = segnalinoSet;\r\n                    break;\r\n                case \"doggo\": var mystyleDoggo = segnalinoSet;\r\n                    break;\r\n                case \"shoe\": var mystyleShoe = segnalinoSet;\r\n                    break;\r\n                case \"thimble\": var mystyleThimble = segnalinoSet;\r\n                    break;\r\n                case \"wheelbarrow\": var mystyleWheelbarrow = segnalinoSet;\r\n                    break;                    \r\n            }                   \r\n        }\r\n\r\n    \r\n  \r\n\r\n        \r\n             \r\n        return (\r\n            <div className=\"imgTavola\" >\r\n                <Pedina figura={car} stile={mystyleCar} />\r\n                <Pedina figura={boat} stile={mystyleBoat} />  \r\n                <Pedina figura={hat} stile={mystyleHat} />\r\n                <Pedina figura={iron} stile={mystyleIron} />\r\n                <Pedina figura={doggo} stile={mystyleDoggo} />\r\n                <Pedina figura={shoe} stile={mystyleShoe} />\r\n                <Pedina figura={thimble} stile={mystyleThimble} />\r\n                <Pedina figura={wheelbarrow} stile={mystyleWheelbarrow} />\r\n\r\n                <ComponentController \r\n                    segnalini={this.state.segnalini} muoviPedine={this.muoviPedine} \r\n                    muoviPedine={this.muoviPedine} \r\n                    tavolaGioco={tavolaGioco}  turnoGiocatore={this.props.turnoGiocatore} setTurnoGiocatore={this.props.setTurnoGiocatore}\r\n                    turnoGiocatore={this.props.turnoGiocatore}\r\n                    setTurnoGiocatore={this.props.setTurnoGiocatore}\r\n                    numeroGiocatori={this.props.numeroGiocatori}\r\n                    terreni={this.props.terreni}\r\n                    setTerreni={this.props.setTerreni}\r\n                    giocatori={this.props.giocatori}\r\n                    setGiocatori={this.props.setGiocatori}\r\n                    societàStazioni={this.props.societàStazioni}\r\n                    setSocietàStazioni={this.props.setSocietàStazioni}\r\n                    caselle={this.props.caselle} setCaselle={this.props.setCaselle}\r\n                />\r\n\r\n            \r\n                                     \r\n                                    \r\n                                    \r\n\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ComponentBoard;\r\n\r\n","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaTerreni.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaGiocatori.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Pedina.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\ComponentController.js",["101","102","103","104","105","106"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Acquista from './AzioniConBottone/Acquista';\r\nimport Costruisci from './AzioniConBottone/Costruisci';\r\nimport Vendi from './AzioniConBottone/Vendi';\r\n//import SceltaNumeroGiocatori from './SceltaNumeroGiocatori';\r\n//import Alert from '@material-ui/lab/Alert';\r\nimport Carte from './CarteProbabilitaImprevisto/Carte';\r\n\r\n\r\nlet dado1;\r\nlet dado2;\r\nlet sommaDadi;\r\nlet punteggioDoppio;\r\nlet carta1 = new Carte();\r\nlet dadiTirati; // Questo booleano permette di tirare i dadi solo ina volta per turno\r\n\r\nfunction verificaPunteggioDoppio(dado1, dado2){\r\n    if(dado1 === dado2){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass ComponentController extends React.Component {\r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            primoMsgTA: 'ultimo messaggio',\r\n            secondoMsgTA: 'penultimo messaggio',\r\n            terzoMsgTA: 'terzultimo messaggio',\r\n        };\r\n      }\r\n\r\n    spostaSegnalino (sommaDadi) {\r\n        // i giocatori vanno da 1 a 6 , per ora assegno i segnalini in ordine numerico\r\n        // uso this.props.turnoGiocatore-1 perchè i segnalini partono da ZERO\r\n        let numSegnalino = this.props.turnoGiocatore;\r\n        let ascissa = this.props.segnalini[numSegnalino][1];\r\n        let ordinata = this.props.segnalini[numSegnalino][2];\r\n\r\n        //let [a, xposSegnalino, tposSegnalino, visSegnalino, strato, attualeCasella] = this.props.segnalini[numSegnalino];\r\n        let attualeCasella = this.props.segnalini[numSegnalino][5];\r\n        \r\n        var i;\r\n        for (i = 1; i < sommaDadi+1; i++) {\r\n            if (attualeCasella === 39) {\r\n                attualeCasella=0\r\n            } else {\r\n                attualeCasella = attualeCasella + 1\r\n            }        \r\n          }\r\n\r\n        ascissa = this.props.tavolaGioco[attualeCasella][1];\r\n        ordinata = this.props.tavolaGioco[attualeCasella][2];\r\n  \r\n        //this.props.segnalini[0]=[\"hat\", ascissa, ordinata, \"visible\",0,attualeCasella];\r\n        this.props.segnalini[numSegnalino][1]=ascissa;\r\n        this.props.segnalini[numSegnalino][2]=ordinata;\r\n        this.props.segnalini[numSegnalino][5]=attualeCasella;\r\n\r\n        if (this.props.caselle[attualeCasella].tipo ==='imprevisti') {\r\n           // alert('imprevisti');\r\n           carta1.estraiCarta(false,this.props.turnoGiocatore);\r\n        };\r\n        if (this.props.caselle[attualeCasella].tipo ==='probabilita') {\r\n            //alert('probabilita');\r\n            carta1.estraiCarta(true,this.props.turnoGiocatore);\r\n        };        \r\n        this.props.muoviPedine();   \r\n\r\n    }      \r\n\r\n    spostaAuto () {\r\n        // funzione di messa a punto mappa caselle \r\n        // sposta il segnalino car in tutte le caselle una alla volta\r\n        let ascissa = this.props.segnalini[2][1];\r\n        let ordinata = this.props.segnalini[2][2];\r\n\r\n        let [a, xposSegnalino, tposSegnalino, visSegnalino, strato, attualeCasella] = this.props.segnalini[2];\r\n\r\n        if (attualeCasella === 39) {\r\n            attualeCasella=0\r\n        } else {\r\n            attualeCasella = attualeCasella + 1\r\n        }\r\n\r\n        ascissa = this.props.tavolaGioco[attualeCasella][1];\r\n        ordinata = this.props.tavolaGioco[attualeCasella][2];\r\n\r\n        this.props.segnalini[2]=[\"car\", ascissa, ordinata, \"visible\",2,attualeCasella];\r\n        this.props.muoviPedine();   \r\n    }        \r\n\r\n    dadiTirati = false;\r\n\r\n    tiraDadi = () => {\r\n        \r\n        if (!dadiTirati){\r\n            dado1 = Math.floor(Math.random()*6) + 1;\r\n            dado2 = Math.floor(Math.random()*6) + 1;\r\n            sommaDadi = dado1 + dado2;\r\n            punteggioDoppio = verificaPunteggioDoppio(dado1, dado2);   \r\n\r\n            this.spostaSegnalino(sommaDadi);\r\n                \r\n            this.setState({\r\n                primoMsgTA: `${sommaDadi}`,\r\n                secondoMsgTA: 'Il punteggio dei dadi è doppio: '+dado1+' + '+dado2 +' ' + `${punteggioDoppio}`,\r\n                terzoMsgTA: `${sommaDadi}`\r\n            })\r\n            dadiTirati = true;\r\n        }\r\n    }\r\n\r\n    // Funzione che permette di concludere il turno e che passa il comando al giocatore successivo.\r\n    // Per comunicare ai giocatori questo cambiamento viene utilizzato un allert.\r\n    finisciTurno = () => {\r\n        const giocatore = this.props.turnoGiocatore;\r\n        var giocatore2;\r\n        if(giocatore === this.props.numeroGiocatori-1){\r\n            giocatore2 = 0;\r\n        }\r\n        else{\r\n            giocatore2 = giocatore + 1;\r\n        }\r\n        \r\n        dadiTirati = false;\r\n        this.props.setTurnoGiocatore(giocatore2);   \r\n\r\n        alert('Ora tocca ad un altro giocatore');\r\n        console.log(this.props.giocatori[this.props.turnoGiocatore])\r\n    }\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <div>              \r\n            <table className=\"tableController\">\r\n            \r\n            <tr>\r\n                <td className=\"tdController\" colspan=\"4\">\r\n                    <button type=\"button\" onClick={() => this.spostaAuto()}>\r\n                        Sposta auto di 1\r\n                    </button>\r\n                </td>\r\n                <td className=\"tdController\">\r\n                    numGiocatori={this.props.numeroGiocatori}\r\n                </td>\r\n            </tr>\r\n            <tr className=\"trController\">\r\n                <td className=\"tdController\">\r\n                    <button type=\"button\" onClick={() => this.tiraDadi()}>Tira dadi</button></td>\r\n                <td className=\"tdController\">\r\n                    <Costruisci \r\n                        terreni={this.props.terreni}\r\n                        giocatori={this.props.giocatori}\r\n                        setTerreni={this.props.setTerreni}\r\n                        setGiocatori={this.props.setGiocatori} \r\n                        turnoGiocatore={this.props.turnoGiocatore}\r\n                    />\r\n                </td>\r\n                <td className=\"tdController\">\r\n                    <Vendi \r\n                        terreni={this.props.terreni}\r\n                        setTerreni={this.props.setTerreni}\r\n                        giocatori={this.props.giocatori}\r\n                        setGiocatori={this.props.setGiocatori} \r\n                        turnoGiocatore={this.props.turnoGiocatore}\r\n                        societàStazioni={this.props.societàStazioni}\r\n                        setSocietàStazioni={this.props.setSocietàStazioni}\r\n                    />\r\n                    \r\n                </td>    \r\n                <td className=\"tdController\">\r\n                    <Button variant=\"outlined\" size=\"small\" onClick={() => this.finisciTurno()}>\r\n                        finisci turno\r\n                    </Button>\r\n                    \r\n                </td>   \r\n                <td className=\"tdController\">\r\n\r\n                  \r\n\r\n                    <Acquista attualeCasella={this.props.segnalini[this.props.turnoGiocatore][5]}\r\n                              caselle={this.props.caselle} setCaselle={this.props.setCaselle}\r\n                              turnoGiocatore={this.props.turnoGiocatore}/>\r\n\r\n                </td>   \r\n            </tr>\r\n            <tr className=\"trControllerTA\">\r\n                <td className=\"tdController\" colspan=\"5\">\r\n                    <AreaTesto \r\n                    messaggioUno={this.state.primoMsgTA}\r\n                    messaggioDue={this.state.secondoMsgTA}\r\n                    messaggioTre={this.state.terzoMsgTA}\r\n                    />  \r\n                </td>  \r\n            </tr>\r\n            </table> \r\n             \r\n            </div>         \r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass AreaTesto extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        // messaggioUno: primoMsgTA,\r\n        // messaggioDue: secondoMsgTA,\r\n        // messaggioTre: terzoMsgTA\r\n      };\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"ControllerTA\" id=\"w3review\" name=\"w3review\" >\r\n                <div>{this.props.messaggioUno}</div>\r\n                <div>{this.props.messaggioDue}</div>\r\n                <div>{this.props.messaggioTre}</div>\r\n            {/* {this.props.primoMsgTA+\"\\n\"+this.props.secondoMsgTA+\"\\n\"+this.props.terzoMsgTA}  */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ComponentController;\r\n\r\n","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\iniziaPartita.js",[],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Banca.js",["107","108"],"import React, { Component } from 'react';\r\nimport TabellaGiocatori from './Tabelle/TabellaGiocatori';\r\n\r\nclass Banca extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            saldoContoGiocatori: [0,0,0,0,0,0],\r\n            contrattiGiocatori: [0,0,0,0,0,0],\r\n        }\r\n    }\r\n\r\n\r\n    // Passa i parametri a TabellaGiocatori (attualmente non funziona)\r\n    creaTabellaGiocatori = () => {\r\n        for(let i=1; i<=6; i++){\r\n            //this.state.createData(i, this.state.saldoContoGiocatori[i-1]);\r\n            <TabellaGiocatori props={i, this.state.saldoContoGiocatori[i-1]} />\r\n        }\r\n    }\r\n\r\n    //Modifica il saldo al giocatore (giocatore identificato tramite un numero int)\r\n    modificaSaldo = (sommaDiDenaro, giocatore) => {\r\n        if(this.state.saldoContoPedine[giocatore] + sommaDiDenaro >= 0){\r\n            this.state.saldoContoPedine[giocatore] += sommaDiDenaro;\r\n        }else{\r\n            console.log(\"Errore\");\r\n        }\r\n    }\r\n}\r\nexport default Banca;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Acquista.js",["109","110","111"],"import React from 'react';\r\nimport {Paper, Modal, Button, Radio, RadioGroup, FormControlLabel} from '@material-ui/core';\r\n\r\n\r\nfunction Acquista(props){\r\n\r\nconst [openModal, setOpenModal] = React.useState(false);\r\nconst handleOpen = () => { setOpenModal(true) };\r\nconst handleClose = () => { setOpenModal(false) };\r\n\r\nconst body = (\r\n    <Paper style={{marginTop:'16px', marginLeft:'200px', marginRight:'200px'}}>\r\n        \r\n      <h3 style={{margin:'16px'}}>Attualmente sei sulla casella {props.attualeCasella}</h3>\r\n\r\n      <h4 style={{margin:'16px'}}>SI lo puoi acquistare</h4>  \r\n      <h4 style={{margin:'16px'}}>non lo puoi acquistare, già acquisito</h4>  \r\n      \r\n      \r\n      <Button variant=\"contained\" style={{margin:'16px'}}  >\r\n        Acquista\r\n      </Button>\r\n      \r\n      \r\n    </Paper>\r\n  );\r\n\r\n    return(\r\n        <div>\r\n          <Button onClick={handleOpen} variant=\"outlined\" size=\"small\" style={{marginLeft:'5px'}}>\r\n          Acquista\r\n          </Button>\r\n          <Modal open={openModal} onClose={handleClose}>\r\n            {body}\r\n          </Modal>\r\n        </div>\r\n        );\r\n        }\r\n\r\nexport default Acquista;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Vendi.js",["112","113"],"import React from 'react';\r\nimport {Paper, Modal, Button, Grid, TextField, Radio, RadioGroup, FormControlLabel} from '@material-ui/core';\r\n\r\n\r\nfunction Vendi(props){\r\n\r\n    \r\n  \r\n    \r\n\r\n//Stato del Modale utilizato per costruire un edificio\r\nconst [openModal, setOpenModal] = React.useState(false);\r\nconst handleOpen = () => { setOpenModal(true) };\r\nconst handleClose = () => { setOpenModal(false) };\r\n\r\n\r\n//Stato del terreno da vendere\r\nconst [terreno, setTerreno] = React.useState('');\r\nconst handleChangeTerreno = (event) => {\r\n  setTerreno(event.target.value);\r\n};\r\n\r\n//Stato del gicatore che vuole vendere\r\nconst [venditore, setVenditore] = React.useState('');\r\nconst handleChangeVenditore = (event) => {\r\n  setVenditore(event.target.value);\r\n};\r\n\r\n//Stato del gicatore che vuole comprare, eventualmente la banca\r\nconst [aquirente, setAquirente] = React.useState('');\r\nconst handleChangeAquirente = (event) => {\r\n  setAquirente(event.target.value);\r\n};\r\n\r\n//Stato del prezzo a cui viene venduta la proprietà\r\nconst [prezzo, setPrezzo] = React.useState('');\r\nconst handleChangePrezzo = (event) => {\r\n  setPrezzo(event.target.value);\r\n};\r\n\r\n\r\n\r\nfunction EsisteTerreno(){\r\n  var i = 0;\r\n  var esiste = false;\r\n  var n;\r\n  while(i < props.terreni.length){\r\n    if(terreno === props.terreni[i].nome){\r\n      esiste = true;\r\n      n = i;\r\n      i = 100;\r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  if(esiste){\r\n    return(n);\r\n  }\r\n  else{\r\n    return(-1);\r\n  }\r\n}\r\n\r\nfunction EsisteSocietàStazione(){\r\n  var i = 0;\r\n  var esiste = false;\r\n  var n;\r\n  while(i < props.societàStazioni.length){\r\n    if(terreno === props.societàStazioni[i].nome){\r\n      esiste = true;\r\n      n = i;\r\n      i = 100;\r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  if(esiste){\r\n    return(n);\r\n  }\r\n  else{\r\n    return(-1);\r\n  }\r\n}\r\n\r\nfunction EsisteGiocatore(nome){\r\n  \r\n  var i = 0;\r\n  while(i < props.giocatori.length){\r\n    if(nome === props.giocatori[i].nome){\r\n     return(i); \r\n    }\r\n    else{\r\n      i++;\r\n    }\r\n  }\r\n  return(-1);\r\n\r\n}\r\n\r\nfunction VendiTerreno(){\r\n\r\n  //verifico che il terreno esista e salvo il risultato in proprietà\r\n  var n = EsisteTerreno();\r\n  \r\n  if(n === -1){\r\n    alert('Controlla che il nome del terreno sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var proprietà = props.terreni[n];\r\n  \r\n  if(!(proprietà.proprietario == venditore)){\r\n    alert('Non puoi vendere qualcosa che non ti appartiene');\r\n    return;\r\n  }\r\n  //verifico che il venditore esista e che non sia la banca\r\n  var y = EsisteGiocatore(venditore);\r\n  if(y === -1){\r\n    alert('Controlla che il nome del venditore sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var venditore2 = props.giocatori[y];\r\n  \r\n \r\n  \r\n  //verifico che l'aquirente esista, può essere anche la banca\r\n  var x = EsisteGiocatore(aquirente);\r\n  var aquirente2;\r\n  if(x === -1){\r\n    alert(\"Controlla che il nome dell'aquirente sia scritto in modo corretto\");\r\n    return;\r\n  }\r\n  if(aquirente === 'Banca'){\r\n    aquirente2 = aquirente;\r\n  }\r\n  else{\r\n    aquirente2 = props.giocatori[x];\r\n  }\r\n  //verifico che sul terreno non ci siano ne case ne alberghi\r\n  if(proprietà.case > 0 || proprietà.alberghi > 0){\r\n    alert('Non puoi vendere un terreno con case o alberghi');\r\n    return;\r\n  }\r\n  //Verifico che venditore e aquirente non siano lo stesso giocatore\r\n  if(venditore2 === aquirente2){\r\n    alert('Non puoi vendere a te stesso');\r\n    return;\r\n  }\r\n  \r\n  //verifico che il prezzo sia > 0\r\n  if(prezzo <= 0){\r\n    alert('Controlla di aver inserito un prezzo maggiore di zero');\r\n    return;\r\n  }\r\n  //sposto i soldi dall'aquirente2 al venditore2\r\n  if(prezzo > 0){\r\n    aquirente2.capitale = aquirente2.capitale - parseInt(prezzo);\r\n    venditore2.capitale = venditore2.capitale + parseInt(prezzo);\r\n  }\r\n  //aquirente diventa il nuovo proprietario della proprietà\r\n  proprietà.proprietario = aquirente2.nome;\r\n  \r\n  //aggiorno le variabili di stato che contengono l'elenco dei terreni e dei giocatori\r\n  var nuoviTerreni = props.terreni;\r\n  nuoviTerreni[n] = proprietà;  \r\n  props.setTerreni(nuoviTerreni);  \r\n  \r\n  var nuoviGiocatori = props.giocatori;\r\n  nuoviGiocatori[x] = aquirente2;\r\n  nuoviGiocatori[y] = venditore2;\r\n  props.setGiocatori(nuoviGiocatori);\r\n\r\n  console.log(props.giocatori);\r\n  console.log(props.terreni);\r\n\r\n  alert('La vendita è andata a buon fine');\r\n}\r\n\r\nfunction VendiStazioneSocietà(){\r\n\r\n  //verifico che la società / stazione esista e salvo il risultato in proprietà\r\n  var n = EsisteSocietàStazione();\r\n  \r\n  if(n === -1){\r\n    alert('Controlla che il nome della società o della stazione sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var proprietà = props.societàStazioni[n];\r\n  \r\n  if(!(proprietà.proprietario == venditore)){\r\n    alert('Non puoi vendere qualcosa che non ti appartiene');\r\n    return;\r\n  }\r\n  //verifico che il venditore esista \r\n  var y = EsisteGiocatore(venditore);\r\n  if(y === -1){\r\n    alert('Controlla che il nome del venditore sia scritto in modo corretto');\r\n    return;\r\n  }\r\n  var venditore2 = props.giocatori[y];\r\n  \r\n \r\n  \r\n  //verifico che l'aquirente esista\r\n  var x = EsisteGiocatore(aquirente);\r\n  var aquirente2;\r\n  if(x === -1){\r\n    alert(\"Controlla che il nome dell'aquirente sia scritto in modo corretto\");\r\n    return;\r\n  }\r\n  aquirente2 = props.giocatori[x];\r\n  \r\n  \r\n  //Verifico che venditore e aquirente non siano lo stesso giocatore\r\n  if(venditore2 === aquirente2){\r\n    alert('Non puoi vendere a te stesso');\r\n    return;\r\n  }\r\n  \r\n  //verifico che il prezzo sia > 0\r\n  if(prezzo <= 0){\r\n    alert('Controlla di aver inserito un prezzo maggiore di zero');\r\n    return;\r\n  }\r\n  //sposto i soldi dall'aquirente2 al venditore2\r\n  if(prezzo > 0){\r\n    aquirente2.capitale = aquirente2.capitale - parseInt(prezzo);\r\n    venditore2.capitale = venditore2.capitale + parseInt(prezzo);\r\n  }\r\n  //aquirente diventa il nuovo proprietario della proprietà\r\n  proprietà.proprietario = aquirente2.nome;\r\n  \r\n  //aggiorno le variabili di stato che contengono l'elenco delle società, delle stazioni e dei giocatori\r\n  var nuoveSocietàStazioni = props.societàStazioni;\r\n  nuoveSocietàStazioni[n] = proprietà;  \r\n  props.setSocietàStazioni(nuoveSocietàStazioni);  \r\n  \r\n  var nuoviGiocatori = props.giocatori;\r\n  nuoviGiocatori[x] = aquirente2;\r\n  nuoviGiocatori[y] = venditore2;\r\n  props.setGiocatori(nuoviGiocatori);\r\n\r\n  console.log(props.giocatori);\r\n  console.log(props.societàStazioni);\r\n\r\n  alert('La vendita è andata a buon fine');\r\n}\r\n\r\n\r\n\r\n//Stato del RadioGrup per la gerstione del tipo di vendita\r\n//si può scegliere se vendere terreni o stazioni/società\r\nconst [tipoVendita, setTipoVendita] = React.useState('Terreno');\r\nconst handleChangeTipoVendita = (event) => { setTipoVendita(event.target.value) };\r\n\r\nfunction Vendita(){\r\n  \r\n  if(tipoVendita === 'Terreno'){\r\n    VendiTerreno();\r\n  }\r\n  else{\r\n    VendiStazioneSocietà();\r\n  }\r\n}\r\n\r\nconst body = (\r\n  <Paper style={{marginTop:'16px', marginLeft:'200px', marginRight:'200px'}}>\r\n      \r\n    <h2 style={{margin:'16px'}}>Cosa vuoi vendere</h2>\r\n    <RadioGroup value={tipoVendita} onChange={handleChangeTipoVendita} style={{margin:'16px'}}>\r\n        <FormControlLabel value=\"Terreno\" control={<Radio />} label=\"Terreno\" />\r\n        <FormControlLabel value=\"StazioneSocietà\" control={<Radio />} label=\"Stazione o Società\" />\r\n    </RadioGroup>\r\n    \r\n    <Grid container direction=\"column\">\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Inserisci il nome della casella che vuoi vendere</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'32px', width:'350px'}} onChange={handleChangeTerreno}/>\r\n      </Grid>\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Nome del venditore</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'265px', width:'350px'}} onChange={handleChangeVenditore}/>\r\n      </Grid>\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Nome dell'aquirente</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'259px', width:'350px'}} onChange={handleChangeAquirente}/>\r\n      </Grid>\r\n      <Grid container directio=\"row\" alignItems=\"center\">\r\n        <h3 style={{margin:'16px'}}>Quanto dovrà pagare?</h3>\r\n        <TextField variant=\"outlined\" style={{margin:'16px', marginLeft:'246px', width:'350px'}} onChange={handleChangePrezzo}/>\r\n      </Grid>\r\n      <Button variant=\"contained\" style={{margin:'16px', width:'100px'}} onClick={() => Vendita()} >\r\n        Vendi\r\n      </Button>\r\n    </Grid>\r\n\r\n    \r\n       \r\n  </Paper>\r\n);\r\n\r\n\r\n\r\nreturn(\r\n<div>\r\n  <Button onClick={handleOpen} variant=\"outlined\" size=\"small\" >\r\n    Vendi\r\n  </Button>\r\n  <Modal open={openModal} onClose={handleClose}>\r\n    {body}\r\n  </Modal>\r\n</div>\r\n);\r\n}\r\nexport default Vendi;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\AzioniConBottone\\Costruisci.js",["114","115"],"C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\CarteProbabilitaImprevisto\\Carte.js",["116","117"],"import React, { Component } from 'react';\r\nimport { modificaSaldo } from '../Banca';\r\n\r\nclass Carte extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //carta = [Numero carta, Descrizione, Somma di denaro, Somma per ogni casa, Somma per ogni albergo, Somma per ogni giocatore]\r\n            carte: [\r\n                //Probabilità\r\n                [0, 'Serata della Grande Opera: incassa $50 da ogni giocaotore', 0, 0, 0, 50],\r\n                [1, 'Errore della banca: incassa $200', 200, 0, 0, 0],\r\n                [2, 'Parcella del medico: paga $50', -50, 0, 0, 0],\r\n                [3, 'Rimborso della imposta sul reddito: incassa $20', 20, 0, 0, 0],\r\n                [4, 'Rendimento assicurazione sulla vita: incassa $100', 100, 0, 0, 0],\r\n                [5, 'Paga le spese mediche ospedaliere: paga $50', -50, 0, 0, 0],\r\n                [6, 'Paga le tasse scolastiche: paga $50', -50, 0, 0, 0],\r\n                [7, 'Commisione consulenza: incassa $25', 25, 0, 0, 0],\r\n                [8, 'Hai vinto il secondo posto in una gara di bellezza: incassa $10', 10, 0, 0, 0],\r\n                [9, 'Eredità: incassa $100', 100, 0, 0, 0],\r\n                [10, 'Vendita di azioni: incassa $100', 100, 0, 0, 0],\r\n                [11, 'Rendimento fondo vacanze: incassa $100', 100, 0, 0, 0],\r\n                [12, 'Sei stato tassato per le riparazioni in questa strada: paga $45 per casa e $115 per hotel', 0, -45, -115, 0],\r\n                [13, 'Esci di Prigione', 0, 0, 0, 0],\r\n                [14, 'Vai in Prigione senza passare dal Via', 0, 0, 0, 0],\r\n                [15, 'Vai al Via', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n\r\n                //Imprevisti\r\n                [16, 'Esci di Prigione', 0, 0, 0, 0],\r\n                [17, 'Vai al Via', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n                [18, 'Vai a Illinois Avenue', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$ IN CASO SI PASSI DAL VIA, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n                [19, 'Vai a St. Charles Place', 0, 0, 0, 0], //ATTENZIONE LA CARTA DOVREBBE DARE 200$ IN CASO SI PASSI DAL VIA, DA FARE DOPO SVILUPPO DELLA CASELLA VIA\r\n                [20, 'La Banca paga un dividendo: incassi $50', 50, 0, 0, 0],\r\n                [21, 'Vai indietro di 3 caselle', 0, 0, 0, 0],\r\n                [22, 'Vai in Prigione senza passare dal Via', 0, 0, 0, 0],\r\n                [23, 'Riparazioni generali a tutte le tue proprietà: paga $25 per casa e $100 per hotel', 0, -25, -100, 0],\r\n                [24, 'Paga tasse scadute: paga $10', -10, 0, 0, 0],\r\n                [25, 'Vai a Reading Railroad', 0, 0, 0, 0],\r\n                [26, 'Vai a Boardwalk', 0, 0, 0, 0],\r\n                [27, 'Sei eletto chairman della tavola da gioco: paga $50 da ogni giocaotore', 0, 0, 0, -50],\r\n                [28, 'Rendimento prestito immobiliare: incassa $150', 150, 0, 0, 0],\r\n                [29, 'Muovi la pedina al prossimo Utility, se non ha proprietario puoi comprarlo, se lo ha tira i dadi e paga 10 volte il risultato del lancio', 0, 0, 0, 0],\r\n                [30, 'Muovi la pedina alla prossimo Stazione, se non ha proprietario puoi comprarla, se lo ha paga il doppio del noleggio', 0, 0, 0, 0],\r\n                [31, 'Hai vinto una competizione di cruciverba: incassa $100', 100, 0, 0, 0],\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    estraiCarta = (probabilitaOImprevisto, giocatore) => { //probabilità==true imprevisto==false\r\n        let idCarta;\r\n        if (probabilitaOImprevisto){\r\n            idCarta = Math.floor(Math.random()*(15));\r\n        }else{\r\n            idCarta = Math.floor(Math.random()*(31-16)+16);\r\n        };\r\n        this.attivaCarta(idCarta, giocatore);\r\n    }\r\n\r\n    \r\n    attivaCarta = (idCarta, giocatore) => {\r\n        //  TODO\r\n        alert('Giocatore: ' + giocatore + ' \\n La carta è: ' + this.state.carte[idCarta][1]);\r\n        //if (this.state.carte[idCarta][2] != 0){\r\n        //     this.props.modificaSaldo(this.state.carte[idCarta][2], giocatore);\r\n        //}\r\n    }\r\n}\r\nexport default Carte;","C:\\Users\\ernesto\\Desktop\\progetto-monopoly-1-gruppo-monopoly-1\\progetto-monopoly-1-gruppo-monopoly-1\\src\\components\\Tabelle\\TabellaSocietàStazioni.js",[],{"ruleId":"118","severity":1,"message":"119","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":11},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":28,"column":19,"nodeType":"128","endLine":28,"endColumn":119},{"ruleId":"118","severity":1,"message":"129","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"130","line":93,"column":53,"nodeType":"120","messageId":"121","endLine":93,"endColumn":65},{"ruleId":"131","severity":1,"message":"132","line":102,"column":13,"nodeType":"133","messageId":"134","endLine":119,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":140,"column":21,"nodeType":"137","endLine":140,"endColumn":51},{"ruleId":"135","severity":1,"message":"136","line":142,"column":21,"nodeType":"137","endLine":142,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":143,"column":21,"nodeType":"137","endLine":143,"endColumn":69},{"ruleId":"118","severity":1,"message":"138","line":84,"column":14,"nodeType":"120","messageId":"121","endLine":84,"endColumn":15},{"ruleId":"118","severity":1,"message":"139","line":84,"column":17,"nodeType":"120","messageId":"121","endLine":84,"endColumn":30},{"ruleId":"118","severity":1,"message":"140","line":84,"column":32,"nodeType":"120","messageId":"121","endLine":84,"endColumn":45},{"ruleId":"118","severity":1,"message":"130","line":84,"column":47,"nodeType":"120","messageId":"121","endLine":84,"endColumn":59},{"ruleId":"118","severity":1,"message":"141","line":84,"column":61,"nodeType":"120","messageId":"121","endLine":84,"endColumn":67},{"ruleId":"142","severity":1,"message":"143","line":113,"column":89,"nodeType":"144","messageId":"145","endLine":113,"endColumn":90},{"ruleId":"146","severity":1,"message":"147","line":18,"column":39,"nodeType":"148","messageId":"149","endLine":18,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":25,"column":13,"nodeType":"152","endLine":25,"endColumn":40},{"ruleId":"118","severity":1,"message":"153","line":2,"column":31,"nodeType":"120","messageId":"121","endLine":2,"endColumn":36},{"ruleId":"118","severity":1,"message":"154","line":2,"column":38,"nodeType":"120","messageId":"121","endLine":2,"endColumn":48},{"ruleId":"118","severity":1,"message":"155","line":2,"column":50,"nodeType":"120","messageId":"121","endLine":2,"endColumn":66},{"ruleId":"156","severity":1,"message":"157","line":113,"column":31,"nodeType":"144","messageId":"158","endLine":113,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":191,"column":31,"nodeType":"144","messageId":"158","endLine":191,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":70,"column":31,"nodeType":"144","messageId":"158","endLine":70,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":117,"column":31,"nodeType":"144","messageId":"158","endLine":117,"endColumn":33},{"ruleId":"118","severity":1,"message":"159","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"160","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Component' is defined but never used.","'visSegnalino' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'a' is assigned a value but never used.","'xposSegnalino' is assigned a value but never used.","'tposSegnalino' is assigned a value but never used.","'strato' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'React' is defined but never used.","'modificaSaldo' is defined but never used.","no-global-assign","no-unsafe-negation"]